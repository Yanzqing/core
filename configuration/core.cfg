//
// Cloud-based Object Recognition Engine (CORE) configuration
//

core:
{
  filter:
  {
    enable_range = true;  // Filter range outliers 
    enable_plane = true;  // Filter a planar model 

    range:
    {
      min_distance = 0.0;  // Minimum outlier range
      max_distance = 1.5;  // Maximum outlier range
    };

    plane:
    {
      distance_threshold = 0.015;  // Minimum distance a point must be to the planar model to be considered an inlier
    };
  };

  segmentation:
  {
    enable_euclidean_cluster = true;  // Euclidean cluster extraction 

    euclidean_cluster:
    {
      tolerance  = 0.05;   // Spatial cluster tolerance distance in Euclidean space
      min_points = 500;    // Minimum number of points to be considered a valid cluster 
      max_points = 75000;  // Maximum number of points to be considered a valid cluster 
    };
  };

  descriptor:
  {
    enable_covariance = true;  // Covariance feature descriptor

    covariance:
    {
      position             = true;   // Position in Cartesian coordinates (xyz)
      color                = true;   // RGB color value 
      normals              = true;   // Estimate surface normals 
      Ix                   = false;  // Intensity image gradient along x direction
      Iy                   = false;  // Intensity image gradient along y direction
      Ixx                  = false;  // Gradient of Ix along x direction
      Iyy                  = false;  // Gradient of Iy along y direction
      Ixy                  = false;  // Gradient of Ix along x and y direction
      Imag                 = false;  // Magnitude of the intensity image gradient
      Dx                   = false;  // Depth image gradient along x direction
      Dy                   = false;  // Depth image gradient along y direction
      Dmag                 = false;  // Magnitude of the depth image gradient
      principal_curvatures = false;  // Estimate principal curvatures 
      gaussian_curvature   = false;  // Compute Gaussian curvature
      normals_radius       = 0.03;   // Neighborhood radius for estimating normals 
      curvatures_radius    = 0.03;   // Neighborhood radius for estimating principal curvatures 
    };
  };
  
  classification:
  {
    enable_svm = true;
    enable_dl = false;
    
    svm:
    {
      gamma = 0.005;        // Learning parameter
      model = "model.txt";  // Output file of the model (based on the training data)                                                     
    };
    
    dl:
    {
      atoms = 64;  // Number of atoms per dictionary
    };
  }; 
};
